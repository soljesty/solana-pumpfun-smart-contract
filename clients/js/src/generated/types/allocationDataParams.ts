/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import { Serializer, option, struct, u64 } from '@metaplex-foundation/umi/serializers';


export type AllocationDataParams = { creator: Option<bigint>; cex: Option<bigint>; launchBrandkit: Option<bigint>; lifetimeBrandkit: Option<bigint>; platform: Option<bigint>; presale: Option<bigint>; poolReserve: Option<bigint>;  };

export type AllocationDataParamsArgs = { creator: OptionOrNullable<number | bigint>; cex: OptionOrNullable<number | bigint>; launchBrandkit: OptionOrNullable<number | bigint>; lifetimeBrandkit: OptionOrNullable<number | bigint>; platform: OptionOrNullable<number | bigint>; presale: OptionOrNullable<number | bigint>; poolReserve: OptionOrNullable<number | bigint>;  };


export function getAllocationDataParamsSerializer(): Serializer<AllocationDataParamsArgs, AllocationDataParams> {
  return struct<AllocationDataParams>([['creator', option(u64())], ['cex', option(u64())], ['launchBrandkit', option(u64())], ['lifetimeBrandkit', option(u64())], ['platform', option(u64())], ['presale', option(u64())], ['poolReserve', option(u64())]], { description: 'AllocationDataParams' }) as Serializer<AllocationDataParamsArgs, AllocationDataParams>;
}


